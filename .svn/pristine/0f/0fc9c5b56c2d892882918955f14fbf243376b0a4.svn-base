package kr.or.navi.project.controller;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.navi.common.paging.BootstrapFormBasePaginationRenderer;
import kr.or.navi.common.paging.PaginationInfo;
import kr.or.navi.common.paging.PaginationRenderer;
import kr.or.navi.project.service.ProjectService;
import kr.or.navi.projectdetail.gantt.service.GanttService;
import kr.or.navi.projectdetail.gantt.vo.GanttEventVO;
import kr.or.navi.vo.IssueVO;
import kr.or.navi.vo.ProjectVO;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Controller
@RequestMapping("/project")
public class ProjectController {
	
//	public static class TestUtils{
//		public static boolean authorize(Authentication authentcation, String projId) {
//			return true;
//		}
//	}
	
	@Inject
	public ProjectService projectService;
	@GetMapping
//	@PreAuthorize("T(kr.or.navi.project.controller.ProjectController.TestUtils).authorize(authentication, projId)")
	public String list(
			@RequestParam(value = "ing",required = false,defaultValue = "ing") String ing
			,@RequestParam Map<String, Object> detailCondition
			, @RequestParam(name="page", required = false, defaultValue = "1") int currentPage
			,Model model) {
		if(ing.equals("end")) {						//마감된
			detailCondition.put("ing", "ing");
		}else {
			detailCondition.put("ing", "");
		}
		PaginationInfo paging = new PaginationInfo(3,3);
		paging.setCurrentPage(currentPage);
		paging.setDetailCondition(detailCondition);
		List<ProjectVO> projectList = projectService.projectList(paging);
		model.addAttribute("projectList", projectList);
		PaginationRenderer renderer = new BootstrapFormBasePaginationRenderer("#searchForm");
		String pagingHTML = renderer.renderPagination(paging);
		model.addAttribute("pagingHTML",pagingHTML);
		model.addAttribute("paging",paging);
		return "project/projectList";
	}
	@GetMapping("/register.do")
	public String projectRegster(Model model) {
		model.addAttribute("title","프로젝트 등록");
		return "project/projectRegister";
	}
	
	
}
