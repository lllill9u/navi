package kr.or.navi.projectdetail.manage.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.navi.project.service.ProjectService;
import kr.or.navi.security.RealUser;
import kr.or.navi.vo.EmpVO;
import kr.or.navi.vo.ProjectVO;
import lombok.extern.slf4j.Slf4j;
@Controller
@RequestMapping("/project/manage")
@Slf4j
public class ProjectManageController {
	@Inject
	private ProjectService service;
	@GetMapping("{proId}")
	public String managePage(@PathVariable(name = "proId") String proId,Model model) {
		ProjectVO project = service.projectOne(proId);
		model.addAttribute("project", project);
		return "project/manage/manage";
	}
	@PostMapping("{proId}/auth")
	public String manageAuth(@PathVariable(name = "proId") String proId, RedirectAttributes redirectAttributes,@RealUser EmpVO vo) {
		ProjectVO project = service.projectOne(proId);
		log.info("proId : {}",project.getEmpId());
		log.info("empId : {}",vo.getEmpId());
		//프로젝트 권한을 읽는다.
		boolean auth = service.authPL(vo, project);
		log.info("PL관리자 성공 여부 확인 : {}",auth);
		if(auth) {
			return "redirect:/project/manage/"+proId;
		}else {
			redirectAttributes.addFlashAttribute("auth",auth);
			return "redirect:/project";
		}
	}
	@GetMapping("{proId}/conect")
	public String managePage1(@PathVariable(name = "proId") String proId,Model model) {
		ProjectVO project = service.projectOne(proId);
		model.addAttribute("project", project);
		return "project/manage/conect";
	}
}
